// 志愿规则说明数据

import { reactive } from "vue";

const firstVolunteer = reactive([
  {
    text: "学生",
    context: "3个志愿（可以增加或者减少数量，默认为3）",
  },
  {
    text: "学校专业",
    context: "招聘人数，专业要求。",
  },
  {
    text: "匹配规则",
    context:
      "先对于所有的学生（考试模式是同一类的学生:比如3+3模式，3+1+2模式）进行按照分数排序。排序完成后，以学生为单位对于每一个考试模式下的学生列表进行志愿匹配，从第一志愿开始匹配，当学生正在匹配的志愿专业招生人数未满时。学生录取成功进行标记不参加下一轮志愿录取，专业招生人数减少一。如果此时专业招生人数已满，这个专业将不在进行匹配。当学生的所有志愿全部遍历完成后，没有标记的学生识为滑档。",
  },
]);

const rangeVolunteer = reactive([
  {
    text: "学生",
    context: "3个志愿（可以增加或者减少数量，默认为3）",
  },
  {
    text: "学校专业",
    context: "招聘人数，专业要求。",
  },
  {
    text: "匹配规则",
    context:
      "先对于所有的学生（考试模式是同一类的学生:比如3+3模式，3+1+2模式）进行按照分数排序。排序完成后，以学生为单位从第一个志愿开始对该学生的所有志愿进行匹配。直到该学生被录取然后进行标记，录取专业招生人数减一，如果此时专业招生人数已满，这个专业将不在进行匹配。如果学生所有志愿全部没有匹配成功，试为滑档。",
  },
]);

export { firstVolunteer,rangeVolunteer }